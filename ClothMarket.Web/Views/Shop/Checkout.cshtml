@model CheckoutViewModel
@{
    ViewBag.Title = "Checkout";
 }

@if (ViewBag.Error != null) {
    
    <h2>@ViewBag.Error</h2>
}
@if (Model != null && Model.CartProducts != null && Model.CartProducts.Count > 0)
{
    var i = 1;
    <section class="flat-row main-shop shop-slidebar">
        <div class="container">
            <div class="row">
                <div class="col-md-4 order-md-2 mb-4">
                    <h4 class="d-flex justify-content-between align-items-center mb-3">
                        <span class="text-muted">Your cart</span>
                    </h4>
                    <ul class="list-group mb-3">
                        @foreach (var product in Model.CartProducts)
                        {
                            var productQuantity = Model.CartProductIDs.Where(productID => productID == product.ID).Count();

                            <li class="list-group-item d-flex justify-content-between lh-condensed" data-id="@product.ID">
                                <div>
                                    <h6 class="my-0">@i - @product.Name - Qty: @productQuantity</h6>
                                    <small class="text-muted">@(product.Description.Length > 100 ? product.Description.Substring(0, 99) : product.Description)</small>
                                </div>
                                <span class="text-muted">Unit Price: $ @product.Price - Total Price: @(productQuantity * product.Price)</span>
                            </li>

                            i++;
                        }
                        <li class="list-group-item d-flex justify-content-between">
                            <span>Total (USD)</span>
                            <strong>$ @Model.CartProducts.Sum(x => x.Price * Model.CartProductIDs.Where(productID => productID == x.ID).Count())</strong>
                        </li>
                    </ul>
                </div>
                <div class="col-md-8 order-md-1">
                    <h4 class="mb-3">Billing address</h4>
                    <form class="needs-validation" novalidate="">
                        <div class="row">
                            <div class="col-md-12 mb-3">
                                <label for="firstName">Name</label>
                                <input type="text" class="form-control" id="Name" name="Name" placeholder="" value="@Model.User.Name" required="">
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="email">Email <span class="text-muted"></span></label>
                            <input type="email" class="form-control" id="Email" placeholder="you@example.com" value="@Model.User.Email">
                        </div>
                        <div class="mb-3">
                            <label for="Phone">Phone No<span class="text-muted"></span></label>
                            <input type="text" class="form-control" id="Phone" placeholder="+8801700000000" value="@Model.User.PhoneNO">
                        </div>
                        <div class="mb-3">
                            <label for="address">Address</label>
                            <input type="text" class="form-control" id="address" placeholder="1234 Main St" required="" value="@Model.User.Address">
                        </div>
                        <div class="form-group">
                            <label>Select Your Payment Method</label>
                            <select class="form-control" name="payment">

                                <option value="CashOnDelivery">Cash-ON-Delivery</option>
                                @*<option value="Paypal">Paypal</option>*@

                            </select>
                        </div>
                        @*<div class="mb-3">

            <input type="text" class="form-control" name="subject" disabled value="Cloth@Market_Mail_Service">
        </div>*@
                        <hr class="mb-4">
                        <button id="placeOrderBtn" class="btn btn-primary btn-lg btn-block" type="button" onclick="SendingEmail();">Place Order!</button>
                        <button id="cancelOrderBtn" class="btn btn-primary btn-lg btn-block" type="button">Cancel Order!</button>

                    </form>
                    <br>
                </div>
            </div>
        </div><!-- /.container -->
    </section>


    <script type="text/javascript">
        

        var SendingEmail = function () {
            email = document.getElementById('Email').value;
            name = document.getElementById('Name').value;

            $.ajax({
                type: "Post",
                url: "/Shop/SendEmail",
                data: {

                    "toEmail": email,
                    "emailBody": "Hi!" + name + " , " + " Your order has been placed! You will get call from our service , Thank you!!  ",
                },
                dataType: "json",
               
                success: function (data) {
                    debugger;
                    alert("An email has been sent to your!");
                },
                error:function () {
                    alert("Check your email about the order confirmation!");
                }
            });
            return false;
        };

	$("#placeOrderBtn").click(function () {
		$.ajax({
			url: '@Url.Action("PlaceOrder", "Shop")',
			data: {
				productIDs: '@string.Join("-", Model.CartProductIDs)'
			}
		})
        .done(function (response) {
        	if(response.Success)
        	{
        		$.cookie('CartProducts', '', { path: '/' });
        		updateCartProducts();

        		swal("Done", "Your Order has been placed. You will get an email soon", "success").then((value) => {
                    window.location = '@Url.Action("Index", "Shop")';

                });;


        	}
        	else{
        		swal("Failed", "Unable to place order.", "warning");
        	}
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("FAIL");
        });
        });

        //Cancel order

        $("#cancelOrderBtn").click(function () {
            $.cookie('CartProducts', '', { path: '/' });
            updateCartProducts();
            swal("Done", "Your Order has been canceled.", "success").then((value) => {
                    //updateCartProducts();
        			window.location = '@Url.Action("Index", "Shop")';
        		});;

        });


    </script>
}
else
{
    <div>
        <div class="jumbotron jumbotron-fluid">
            <div class="container">
                <h1 class="display-4" style="color:palevioletred;padding:20px;">No Products in cart!!</h1>
                <p class="lead">You may not choose any product, Choose product form Shop.</p>
            </div>
        </div>
    </div>
}
